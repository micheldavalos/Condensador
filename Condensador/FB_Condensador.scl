FUNCTION_BLOCK "FB_Condensador"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_OUTPUT 
      oActual : Int;
      oTimer1Min : Int;
      oTimer15Sec : Int;
      oTimer5Sec : Int;
   END_VAR

   VAR 
      Timer_1Minuto {InstructionName := 'TON_TIME'; LibVersion := '1.0'; S7_SetPoint := 'False'} : TON_TIME;
      Timer_15sec {InstructionName := 'TON_TIME'; LibVersion := '1.0'} : TON_TIME;
      Timer_5Sec {InstructionName := 'TON_TIME'; LibVersion := '1.0'} : TON_TIME;
   END_VAR

   VAR CONSTANT 
      sAPAGADO : Int := 10;
      sENCENDIDO : Int := 20;
      sLLENO : Int := 30;
      sPARO : Int := 40;
      sERROR : Int := 50;
      sMANUAL : Int := 60;
      sESPERA : Int := 0;
      s1MINSTOP : Int := 100;
      s1MINRUNNING : Int := 110;
      s15SECSTOP : Int := 200;
      s15SECRUNNING : Int := 210;
      s15SECPAUSE : Int := 220;
      s5SECSTOP : Int := 300;
      s5SECRUNNING : Int := 310;
   END_VAR


BEGIN
	#oActual := "States".sActual;
	#oTimer1Min := "States".sTimer1Min;
	#oTimer15Sec := "States".sTimer15Sec;
	#oTimer5Sec := "States".sTimer5Sec;
	
	// Estados
	CASE #oActual OF
	    #sESPERA:
	        "InputSignals".iMotor := 0;
	        "InputSignals".iVibrador := 0;
	        "OutputSignals".oMotor := "InputSignals".iMotor;
	        "OutputSignals".oVibrador := "InputSignals".iVibrador;
	        
	        IF "InputSignals".iManual = TRUE THEN
	            "States".sActual := #sAPAGADO;
	        ELSIF "InputSignals".iAuto = TRUE THEN
	            "States".sActual := #sENCENDIDO;
	        END_IF;
	        ;
	    #sAPAGADO:
	        "OutputSignals".oMotor := 0;
	(*        IF "InputsSignals".iBoton = TRUE THEN
	            "States".sActual := #sENCENDIDO;
	        END_IF; *)
	    #sENCENDIDO:
	        "InputSignals".iMotor := 1;
	        "OutputSignals".oMotor := "InputSignals".iMotor;
	        
	        // Estados del Timer 1 minuto
	        CASE #oTimer1Min OF
	            #s1MINSTOP:
	                // Timer 1 minuto
	                "States".sTimer1Min := #s1MINRUNNING;
	                #oTimer1Min := #s1MINRUNNING;
	            #s1MINRUNNING:
	                IF #Timer_1Minuto.Q = TRUE AND "InputSignals".iSensor = FALSE THEN
	                    // "Timer_UnMinuto".IN := FALSE;
	                    #Timer_1Minuto.IN := FALSE;
	                    "States".sActual := #sERROR;
	                    "States".sTimer1Min := #s1MINSTOP;
	                END_IF;
	        END_CASE;
	        // Estados del Timer 15 sec
	        CASE #oTimer15Sec OF
	            #s15SECSTOP:
	                "States".sTimer15Sec := #s15SECRUNNING;
	                #oTimer15Sec := #s15SECRUNNING;
	            #s15SECRUNNING:
	                IF #Timer_15sec.Q = TRUE THEN   // Validar para que siga repitiendose sin esperar al de 5 segundos
	                    //"Timer_15sec".IN := FALSE;
	                    "States".sTimer15Sec := #s15SECPAUSE;
	                    "States".sTimer5Sec := #s5SECRUNNING;
	                    #oTimer15Sec := #s15SECPAUSE;
	                    #oTimer5Sec := #s5SECRUNNING;
	                END_IF;
	            #s15SECPAUSE:
	                ;
	        END_CASE;
	        // Estados Timer 5 segundos
	        CASE #oTimer5Sec OF
	            #s5SECSTOP:
	                "OutputSignals".oVibrador := 0;
	            #s5SECRUNNING:
	                // Vibrar
	                "OutputSignals".oVibrador := 1;
	                #oTimer15Sec := #s15SECPAUSE;
	                IF #Timer_5Sec.Q = TRUE THEN
	                    "States".sTimer15Sec := #s15SECSTOP;
	                    "States".sTimer5Sec := #s5SECSTOP;
	                    #oTimer5Sec := #s5SECSTOP;
	                    #oTimer15Sec := #s15SECSTOP;
	                    // Parar de vibrar
	                    "OutputSignals".oVibrador := 0;
	                END_IF;
	        END_CASE;
	        
	        // Verifica el sensor
	        IF "InputSignals".iSensor = TRUE THEN
	            "States".sActual := #sLLENO;
	            
	            // Apagar Timers
	            "FC_Apagar_Timers"();
	        END_IF;
	    #sLLENO:
	        "OutputSignals".oMotor := 0;
	        "OutputSignals".oVibrador := 0;
	        (* IF "InputsSignals".iManual = TRUE AND "InputsSignals".iBoton = FALSE THEN
	            "States".sActual := #sAPAGADO;
	        END_IF; *)
	        IF "InputSignals".iSensor = FALSE THEN
	            "States".sActual := #sENCENDIDO;
	        END_IF;
	    #sPARO:
	        "OutputSignals".oMotor := 0;
	        IF "InputSignals".iParo = TRUE THEN
	            "States".sActual := #sESPERA;
	            "InputSignals".iParo := FALSE;
	            // ToDo: Activiar para que se vaya a Modo Manual
	        END_IF;
	    #sERROR:
	        "OutputSignals".oMotor := 0;
	        "OutputSignals".oVibrador := 0;
	        
	        "InputSignals".iMotor := 0;
	        "InputSignals".iVibrador := 0;
	        
	        "FC_Apagar_Timers"();
	END_CASE;
	
	IF "InputSignals".iParo = TRUE THEN
	    "OutputSignals".oMotor := 0;
	    "InputSignals".iParo := FALSE;
	    
	    "InputSignals".iMotor := 0;
	    "InputSignals".iVibrador := 0;
	    
	    // Apagar timers
	    "FC_Apagar_Timers"();
	    
	    // Se va a manual
	    "InputSignals".iAuto := FALSE;
	    // Cambiar estado
	    // "States".sActual := #sPARO;
	END_IF;
	
	// Timer 1min
	#Timer_1Minuto.IN := (#oTimer1Min = #s1MINRUNNING);
	// Timer 15sec
	#Timer_15sec.IN := (#oTimer15Sec = #s15SECRUNNING) AND (#oTimer1Min = #s1MINRUNNING);
	// Timer 5sec
	#Timer_5Sec.IN := (#oTimer5Sec = #s5SECRUNNING);
	
	                  
	
	
	
	
	
	
END_FUNCTION_BLOCK

